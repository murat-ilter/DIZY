from gurobipy import *import math milpredpos = [[0, 0, 1, -1, -1, 0, -1, -1, 1, -1, + 4 ],[-2, 1, 2, -1, -3, -1, 3, 2, -3, -3, + 10 ],[-2, -1, -1, 1, 2, -1, 2, 0, 1, -1, + 4 ],[1, -1, 0, -1, 1, 0, 1, 1, 1, 0, + 1 ],[-3, 1, -2, -2, -1, -3, 1, -2, -3, -2, + 15 ],[-2, -1, -2, 1, 0, -2, 2, 2, 1, -2, + 7 ],[2, -1, -1, -2, -1, 2, -1, 2, -2, -2, + 8 ],[-1, 1, -1, -1, -1, 1, 0, 0, 1, 0, + 3 ],[-1, -1, 2, -2, 0, 0, 1, 2, 2, 2, + 2 ],[-2, -1, 1, 1, -2, 2, 2, -1, 2, -1, + 5 ],[1, -1, -1, -1, 1, -1, -2, 2, -2, 1, + 6 ],[-1, 3, 2, 2, 2, 0, -1, 3, 1, -1, + 0 ],[-2, -1, 1, 1, -1, -2, 2, -1, -2, 1, + 7 ],[-2, -1, 2, 1, 2, -2, 0, 1, -2, 2, + 5 ],[2, 2, 2, 1, 1, -1, 1, -1, 0, 0, + 0 ],[2, 1, -2, -1, 1, 2, 1, -2, -2, 0, + 5 ],[-1, 1, 1, 2, -2, 1, -2, -2, -2, -2, + 9 ],[0, -1, -1, -1, 0, -1, 1, -1, -1, -1, + 6 ],[1, -2, 2, -2, -1, 0, -2, 1, -1, -2, + 8 ],[2, 1, 1, -1, 2, -2, 1, -2, 1, 0, + 3 ],[2, 1, 0, -2, 1, 2, 1, 2, 2, 0, + 0 ],[-1, 2, 2, -3, -1, -1, -3, -2, -3, 3, + 11 ],[1, -1, -2, 2, -2, 2, 2, -1, -2, -2, + 8 ],[1, -1, 1, -1, -1, 0, 1, 0, 0, 1, + 2 ],[-2, 1, 1, 1, -1, 1, -2, 2, -2, 2, + 5 ],[-1, -2, -1, -2, -2, 1, 0, -2, -2, 1, + 10 ],[-2, -1, -1, -2, 1, 2, -2, -1, -1, -2, + 10 ],[1, -1, -1, 1, -2, -2, 2, 1, 2, -2, + 6 ],[2, 2, 1, 1, -1, 2, -2, -2, 0, -1, + 4 ],[-1, 0, -1, 1, 0, -1, 1, -1, 1, 1, + 3 ],[-2, -2, 1, 1, -1, 2, -2, 1, -2, -1, + 8 ],[1, 1, -2, 1, -2, 2, -1, 2, -1, 2, + 4 ],[2, 2, 1, -1, -2, 1, -2, -2, 1, 0, + 5 ],[-1, 2, 1, 2, -2, 1, -2, -2, 2, 2, + 5 ],[2, -2, 1, 1, -2, -2, -1, 0, -1, -2, + 8 ],[-1, 2, -3, -3, 1, -2, 1, 2, -3, -3, + 12 ],[1, 2, -1, 1, 2, -2, -2, -1, 1, 0, + 4 ],[-2, 1, 1, -2, 1, 0, 2, -2, -1, -2, + 7 ],[1, 2, -2, 1, -1, -2, -1, -2, -1, 2, + 7 ],[-1, 2, -2, -1, -2, -2, 1, 1, -2, 1, + 8 ],[1, 1, -1, -2, -1, -2, 2, 2, -2, 1, + 6 ],[1, -3, -3, 2, 1, -2, 2, -1, -2, 3, + 8 ],[-1, -1, -1, -2, -2, 6, 5, 7, 7, 6, + 0 ],[2, 1, -2, -1, -2, -2, -2, 2, 2, -1, + 8 ],[-1, -3, -1, 1, -3, 3, -3, -3, -2, 3, + 13 ],[-1, -1, -1, -1, 1, -1, -1, 0, 0, 1, + 5 ],[-1, -2, 2, 2, -1, -2, -2, 0, 2, -1, + 7 ],[-1, -2, 1, 1, 2, 2, 1, -1, -2, -2, + 6 ],[2, -1, -1, -1, -1, 2, -1, -2, 2, -2, + 7 ],[2, 1, -2, -1, -1, -2, 2, -2, 2, 1, + 6 ],[-1, 1, 2, -1, -1, 0, 2, 1, 2, 2, + 1 ],[2, 0, 1, -2, -1, -1, -2, -2, -1, -2, + 9 ],[3, 3, -1, 3, 2, 3, 3, -1, 0, -1, + 0 ],[-1, -2, -2, 1, 2, 1, 2, 0, 0, 1, + 3 ],[3, -2, 2, -1, 4, 3, -4, 2, -4, 1, + 7 ],[1, 1, 2, 2, -1, -2, 2, -2, 1, -1, + 4 ],[1, 1, -1, 2, -1, -2, -1, 2, -1, -2, + 6 ],[-1, -2, -2, 1, 1, 1, 2, 1, 0, 1, + 3 ],[-1, 1, 1, -1, 1, 0, -1, -1, 0, 1, + 3 ],[-1, 1, -2, 2, 1, 1, 1, -1, 2, -1, + 3 ],[-1, -1, -1, 1, -2, -2, -2, 2, 1, 2, + 7 ],[-1, -1, -2, 1, -2, 2, -2, 2, 1, -2, + 8 ],[1, -2, 2, -2, 1, 0, -2, -1, -2, -1, + 8 ],[-2, -1, -2, -1, -1, 1, -1, 2, 2, -1, + 7 ],[1, 2, 1, 2, 1, -1, -1, 1, 0, 0, + 0 ],[-1, 1, 0, 1, -1, 1, 1, -1, -1, 1, + 3 ],[-1, 2, 1, 1, -1, 1, 2, 2, -2, -2, + 4 ],[2, 2, 2, -1, -1, 1, 2, 2, 0, 0, + 0 ],[5, -3, 2, 4, 2, 5, -1, 0, -1, 3, + 0 ],[-1, 1, 2, -1, 2, 1, 2, 2, 0, 2, + 0 ],[1, -1, -2, -1, 1, -1, -2, -2, 2, 1, + 7 ],[2, -1, -2, 2, 1, -1, -1, 0, 1, 2, + 3 ],[1, -3, 1, 2, 1, 3, 1, 0, 2, 2, + 0 ],[-1, 1, -1, 0, 1, 0, 0, 0, 1, 1, + 1 ],[-1, 1, 1, 0, 0, 0, -1, 1, 1, -1, + 2 ],[-1, 1, 0, -1, 1, 0, -1, 1, -1, -1, + 4 ],[-1, -1, 2, -2, 1, 0, 1, -2, 1, -2, + 6 ],[-2, -1, -1, 2, -2, -2, -2, -2, 1, -2, + 12 ]]#list3 = [[0, 6, 22],[1, 16, 8],[2, 0, 18],[5, 7, 27],[6, 20, 13],[7, 2, 23],[10, 12, 17],[11, 26, 3],[12, 10, 28],[15, 2, 27],[16, 21, 9],[17, 11, 24],[20, 7, 17],[21, 15, 14],[22, 1, 29],[25, 12, 25],[26, 22, 4],[27, 5, 19],[30, 36, 52],[31, 46, 38],[32, 30, 48],[35, 37, 57],[36, 50, 43],[37, 32, 53],[40, 42, 47],[41, 56, 33],[42, 40, 58],[45, 32, 57],[46, 51, 39],[47, 41, 54],[50, 37, 47],[51, 45, 44],[52, 31, 59],[55, 42, 55],[56, 52, 34],[57, 35, 49],[60, 66, 82],[61, 76, 68],[62, 60, 78],[65, 67, 87],[66, 80, 73],[67, 62, 83],[70, 72, 77],[71, 86, 63],[72, 70, 88],[75, 62, 87],[76, 81, 69],[77, 71, 84],[80, 67, 77],[81, 75, 74],[82, 61, 89],[85, 72, 85],[86, 82, 64],[87, 65, 79],[90, 96, 112],[91, 106, 98],[92, 90, 108],[95, 97, 117],[96, 110, 103],[97, 92, 113],[100, 102, 107],[101, 116, 93],[102, 100, 118],[105, 92, 117],[106, 111, 99],[107, 101, 114],[110, 97, 107],[111, 105, 104],[112, 91, 119],[115, 102, 115],[116, 112, 94],[117, 95, 109]]lÄ±st3 = [[0, 6, 67], [1, 61, 8], [2, 0, 63], [5, 7, 72], [6, 65, 13], [7, 2, 68], [10, 12, 62], [11, 71, 3], [12, 10, 73], [15, 2, 72], [16, 66, 9], [17, 11, 69], [20, 7, 62], [21, 60, 14], [22, 1, 74], [25, 12, 70], [26, 67, 4], [27, 5, 64], [30, 21, 82], [31, 76, 23], [32, 15, 78], [35, 22, 87], [36, 80, 28], [37, 17, 83], [40, 27, 77], [41, 86, 18], [42, 25, 88], [45, 17, 87], [46, 81, 24], [47, 26, 84], [50, 22, 77], [51, 75, 29], [52, 16, 89], [55, 27, 85], [56, 82, 19], [57, 20, 79], [60, 36, 97], [61, 91, 38], [62, 30, 93], [65, 37, 102], [66, 95, 43], [67, 32, 98], [70, 42, 92], [71, 101, 33], [72, 40, 103], [75, 32, 102], [76, 96, 39], [77, 41, 99], [80, 37, 92], [81, 90, 44], [82, 31, 104], [85, 42, 100], [86, 97, 34], [87, 35, 94], [90, 51, 112], [91, 106, 53], [92, 45, 108], [95, 52, 117], [96, 110, 58], [97, 47, 113], [100, 57, 107], [101, 116, 48], [102, 55, 118], [105, 47, 117], [106, 111, 54], [107, 56, 114], [110, 52, 107], [111, 105, 59], [112, 46, 119], [115, 57, 115], [116, 112, 49], [117, 50, 109]]#list2 = [[3, 15],[4, 1],[8, 21],[9, 11],[13, 25],[14, 5],[18, 16],[19, 0],[23, 20],[24, 10],[28, 26],[29, 6],[33, 45],[34, 31],[38, 51],[39, 41],[43, 55],[44, 35],[48, 46],[49, 30],[53, 50],[54, 40],[58, 56],[59, 36],[63, 75],[64, 61],[68, 81],[69, 71],[73, 85],[74, 65],[78, 76],[79, 60],[83, 80],[84, 70],[88, 86],[89, 66],[93, 105],[94, 91],[98, 111],[99, 101],[103, 115],[104, 95],[108, 106],[109, 90],[113, 110],[114, 100],[118, 116],[119, 96]]list2 =  [[3, 60], [4, 1], [8, 66], [9, 11], [13, 70], [14, 5], [18, 61], [19, 0], [23, 65], [24, 10], [28, 71], [29, 6], [33, 75], [34, 16], [38, 81], [39, 26], [43, 85], [44, 20], [48, 76], [49, 15], [53, 80], [54, 25], [58, 86], [59, 21], [63, 90], [64, 31], [68, 96], [69, 41], [73, 100], [74, 35], [78, 91], [79, 30], [83, 95], [84, 40], [88, 101], [89, 36], [93, 105], [94, 46], [98, 111], [99, 56], [103, 115], [104, 50], [108, 106], [109, 45], [113, 110], [114, 55], [118, 116], [119, 51]]#listtotal = [0, 6, 22],[1, 16, 8],[2, 0, 18],[3, 15],[4, 1],[5, 7, 27],[6, 20, 13],[7, 2, 23],[8, 21],[9, 11],[10, 12, 17],[11, 26, 3],[12, 10, 28],[13, 25],[14, 5],[15, 2, 27],[16, 21, 9],[17, 11, 24],[18, 16],[19, 0],[20, 7, 17],[21, 15, 14],[22, 1, 29],[23, 20],[24, 10],[25, 12, 25],[26, 22, 4],[27, 5, 19],[28, 26],[29, 6],[30, 36, 52],[31, 46, 38],[32, 30, 48],[33, 45],[34, 31],[35, 37, 57],[36, 50, 43],[37, 32, 53],[38, 51],[39, 41],[40, 42, 47],[41, 56, 33],[42, 40, 58],[43, 55],[44, 35],[45, 32, 57],[46, 51, 39],[47, 41, 54],[48, 46],[49, 30],[50, 37, 47],[51, 45, 44],[52, 31, 59],[53, 50],[54, 40],[55, 42, 55],[56, 52, 34],[57, 35, 49],[58, 56],[59, 36],[60, 66, 82],[61, 76, 68],[62, 60, 78],[63, 75],[64, 61],[65, 67, 87],[66, 80, 73],[67, 62, 83],[68, 81],[69, 71],[70, 72, 77],[71, 86, 63],[72, 70, 88],[73, 85],[74, 65],[75, 62, 87],[76, 81, 69],[77, 71, 84],[78, 76],[79, 60],[80, 67, 77],[81, 75, 74],[82, 61, 89],[83, 80],[84, 70],[85, 72, 85],[86, 82, 64],[87, 65, 79],[88, 86],[89, 66],[90, 96, 112],[91, 106, 98],[92, 90, 108],[93, 105],[94, 91],[95, 97, 117],[96, 110, 103],[97, 92, 113],[98, 111],[99, 101],[100, 102, 107],[101, 116, 93],[102, 100, 118],[103, 115],[104, 95],[105, 92, 117],[106, 111, 99],[107, 101, 114],[108, 106],[109, 90],[110, 97, 107],[111, 105, 104],[112, 91, 119],[113, 110],[114, 100],[115, 102, 115],[116, 112, 94],[117, 95, 109],[118, 116],[119, 96],listtotal = [[0, 6, 67], [1, 61, 8], [2, 0, 63], [3, 60], [4, 1], [5, 7, 72], [6, 65, 13], [7, 2, 68], [8, 66], [9, 11], [10, 12, 62], [11, 71, 3], [12, 10, 73], [13, 70], [14, 5], [15, 2, 72], [16, 66, 9], [17, 11, 69], [18, 61], [19, 0], [20, 7, 62], [21, 60, 14], [22, 1, 74], [23, 65], [24, 10], [25, 12, 70], [26, 67, 4], [27, 5, 64], [28, 71], [29, 6], [30, 21, 82], [31, 76, 23], [32, 15, 78], [33, 75], [34, 16], [35, 22, 87], [36, 80, 28], [37, 17, 83], [38, 81], [39, 26], [40, 27, 77], [41, 86, 18], [42, 25, 88], [43, 85], [44, 20], [45, 17, 87], [46, 81, 24], [47, 26, 84], [48, 76], [49, 15], [50, 22, 77], [51, 75, 29], [52, 16, 89], [53, 80], [54, 25], [55, 27, 85], [56, 82, 19], [57, 20, 79], [58, 86], [59, 21], [60, 36, 97], [61, 91, 38], [62, 30, 93], [63, 90], [64, 31], [65, 37, 102], [66, 95, 43], [67, 32, 98], [68, 96], [69, 41], [70, 42, 92], [71, 101, 33], [72, 40, 103], [73, 100], [74, 35], [75, 32, 102], [76, 96, 39], [77, 41, 99], [78, 91], [79, 30], [80, 37, 92], [81, 90, 44], [82, 31, 104], [83, 95], [84, 40], [85, 42, 100], [86, 97, 34], [87, 35, 94], [88, 101], [89, 36], [90, 51, 112], [91, 106, 53], [92, 45, 108], [93, 105], [94, 46], [95, 52, 117], [96, 110, 58], [97, 47, 113], [98, 111], [99, 56], [100, 57, 107], [101, 116, 48], [102, 55, 118], [103, 115], [104, 50], [105, 47, 117], [106, 111, 54], [107, 56, 114], [108, 106], [109, 45], [110, 52, 107], [111, 105, 59], [112, 46, 119], [113, 110], [114, 55], [115, 57, 115], [116, 112, 49], [117, 50, 109], [118, 116], [119, 51]]ROUNDS = 4numberOfSbox = 24inputSize = 120dummycount =0filename = 'dizy-80-restricted-' + str(ROUNDS) +'.lp'file = open(filename, 'w+')filename2 = 'dizy-80-rest4-time' + str(ROUNDS) +'.txt'file2 = open(filename2, 'w+')def objective():    file.write("Minimize\n")    for i in range(0,(ROUNDS)*numberOfSbox):        file.write("A" + str(int(i/numberOfSbox)) + "_" + str(i%numberOfSbox))        if (i != ((ROUNDS)*numberOfSbox)-1):            file.write(" + ")    file.write("\n")def nonzeroinput():    file.write("Subject to\n")    for i in range(inputSize):        file.write("x0_" + str(i))        if(i != (inputSize-1)):            file.write(' + ')    file.write(" >= 1 \n")    def printvariables():    file.write("Binary\n")    for i in range (ROUNDS):       for j in range(numberOfSbox):           file.write("A" + str(i) + "_" +str(j) + "\n")    for i in range (ROUNDS+1):        for j in range(inputSize):            file.write("x" + str(i) + "_" + str(j) + "\n")    for i in range (ROUNDS):        for j in range(inputSize):            file.write("y" + str(i) + "_" + str(j) + "\n")    for i in range (ROUNDS):        for j in range(dummycount):            file.write("d" + str(i) + "_" + str(j) + "\n")                                    def printreducedequations(inputList,outputList,roundCount,activityofSbox):    inputRevList = inputList    outputRevList = outputList    reducedEqn = inputRevList + outputRevList    for x in range(5):        file.write("+ 5 x" + str(roundCount) + "_" +  str(inputList[x]))        if(x!=4):            file.write(" ")        else:            file.write(" - ")    for x in range(5):        file.write("y" + str(roundCount) + "_" +  str(inputList[x]))        if(x!=4):            file.write(" - ")        else:            file.write(" >= 0 \n")                for x in range(5):        file.write("+ 5 y" + str(roundCount) + "_" +  str(inputList[x]))        if(x!=4):            file.write(" ")        else:            file.write(" - ")    for x in range(5):        file.write("x" + str(roundCount) + "_" +  str(inputList[x]))        if(x!=4):            file.write(" - ")        else:            file.write(" >= 0 \n")    for i in range(len(milpredpos)):        for j in range(len(inputList)):            if(milpredpos[i][j] > 0):                file.write(" + " + str(milpredpos[i][j]) + " x" + str(roundCount) + "_" +  str(reducedEqn[j]))            if(milpredpos[i][j] < 0):                file.write(" " + str(milpredpos[i][j]) + " x" + str(roundCount) + "_" +  str(reducedEqn[j]))        for j in range(len(inputList)):            if(milpredpos[i][j + len(inputList)] > 0):                file.write(" + " + str(milpredpos[i][j + len(inputList)]) + " y" + str(roundCount) + "_" +  str(reducedEqn[j]))            if(milpredpos[i][j+ len(inputList)] < 0):                file.write(" " + str(milpredpos[i][j + len(inputList) ]) + " y" + str(roundCount) + "_" +  str(reducedEqn[j]))        if(milpredpos[i][-1] > 0):            file.write(" >= -" + str(milpredpos[i][-1]) + " \n")        if(milpredpos[i][-1] < 0):            file.write(" >= + " + str(-1 * milpredpos[i][-1]) + " \n")        if(milpredpos[i][-1] == 0):            file.write(" >= 0 \n")    def printactivityofsbox(inputList,roundCount,sboxCount):    for i in range(len(inputList)):        file.write("x" + str(roundCount) + "_" + str(inputList[i]))        if(i != len(inputList)-1):           file.write(" + ")    file.write(" - " + "A" + str(roundCount) + "_" + str(sboxCount) + " >= 0 \n")    for i in range(len(inputList)):        file.write("A" + str(roundCount) + "_" + str(sboxCount) + " - x" + str(roundCount) + "_" + str(inputList[i]) + " >= 0 \n")def printmds(roundCount):    global dummycount    dummycount = 0    for i in range (len(listtotal)):        if len(listtotal[i]) == 3:            file.write("x"    + str(roundCount+1)+ "_" + str(listtotal[i][0]) +                        " + y" + str(roundCount)  + "_" + str(listtotal[i][1])+                        " + y" + str(roundCount)  + "_" + str(listtotal[i][2])+                        " -2 d"+ str(roundCount)  + "_" + str(dummycount) + " = 0\n")             dummycount = dummycount + 1         else:            file.write("x" + str(roundCount+1) + "_" + str(listtotal[i][0]) + " -1 y" + str(roundCount) + "_" + str(listtotal[i][1]) + " = 0\n")             def restricter_init(ROUNDS):            numbers = [i for i in range(0, 120) if i % 5 not in (0, 1)]    for number in numbers:        file.write("x" +str(0) + "_" + str(number) + " = 0\n")               def restricter_final(ROUNDS):    numbers = [i for i in range(120) if i % 3 != 0 or i > 93]    for number in numbers:        file.write("x" +str(ROUNDS) + "_" + str(number) + " = 0\n")         objective()nonzeroinput()plaintext = [i for i in range(0, inputSize)]for i in range (0,ROUNDS):    for j in range (0, numberOfSbox):        inputList =  [plaintext[5 * j], plaintext[(5 * j) + 1], plaintext[(5 * j) + 2], plaintext[(5 * j) + 3], plaintext[(5 * j) + 4]]        outputList = [plaintext[5 * j], plaintext[(5 * j) + 1], plaintext[(5 * j) + 2], plaintext[(5 * j) + 3], plaintext[(5 * j) + 4]]        printactivityofsbox(inputList, i, j)        printreducedequations(inputList,outputList, i,j)    printmds(i)           restricter_init(ROUNDS)restricter_final(ROUNDS)printvariables()file.close()envname = "dizy-restricted-" + str(ROUNDS) + ".log"env = Env(envname)m = read(filename,env)  obj = m.getObjective()m.optimize()time = int(m.Runtime)time = math.floor(time)file2.write(str(time) + " seconds \n")for v in m.getVars():    if v.x == 1:        print(v)        file2.write(str(v) + "\n")file2.close()